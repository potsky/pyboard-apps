import re

PIXEL_SIZE = 5

chars = {
  "A" : [
      [0,0,1,0,0],
      [0,1,0,1,0],
      [0,1,0,1,0],
      [1,1,1,1,1],
      [1,0,0,0,1],
  ],
  "B" : [
      [1,1,1,1,0],
      [1,0,0,0,1],
      [1,1,1,1,0],
      [1,0,0,0,1],
      [1,1,1,1,0],
  ],
  "C" : [
      [0,1,1,1,1],
      [1,0,0,0,0],
      [1,0,0,0,0],
      [1,0,0,0,0],
      [0,1,1,1,1],
  ],
  "D" : [
      [1,1,1,1,0],
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,1,1,1,0],
  ],
  "E" : [
      [1,1,1,1,1],
      [1,0,0,0,0],
      [1,1,1,0,0],
      [1,0,0,0,0],
      [1,1,1,1,1],
  ],
  "F" : [
      [1,1,1,1,1],
      [1,0,0,0,0],
      [1,1,1,0,0],
      [1,0,0,0,0],
      [1,0,0,0,0],
  ],
  "G" : [
      [0,1,1,1,1],
      [1,0,0,0,0],
      [1,0,0,1,1],
      [1,0,0,0,1],
      [0,1,1,1,0],
  ],
  "H" : [
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,1,1,1,1],
      [1,0,0,0,1],
      [1,0,0,0,1],
  ],
  "I" : [
      [1,1,1,1,1],
      [0,0,1,0,0],
      [0,0,1,0,0],
      [0,0,1,0,0],
      [1,1,1,1,1],
  ],
  "J" : [
      [0,0,0,0,1],
      [0,0,0,0,1],
      [0,0,0,0,1],
      [1,0,0,0,1],
      [0,1,1,1,0],
  ],
  "K" : [
      [1,0,0,1,0],
      [1,0,1,0,0],
      [1,1,0,0,0],
      [1,0,1,0,0],
      [1,0,0,1,0],
  ],

  "L" : [
      [1,0,0,0,0],
      [1,0,0,0,0],
      [1,0,0,0,0],
      [1,0,0,0,0],
      [1,1,1,1,1],
  ],

  "M" : [
      [1,0,0,0,1],
      [1,1,0,1,1],
      [1,0,1,0,1],
      [1,0,0,0,1],
      [1,0,0,0,1],
  ],

  "N" : [
      [1,0,0,0,1],
      [1,1,0,0,1],
      [1,0,1,0,1],
      [1,0,0,1,1],
      [1,0,0,0,1],
  ],
  "O" : [
      [0,1,1,1,0],
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,0,0,0,1],
      [0,1,1,1,0],
  ],
  "P" : [
      [1,1,1,1,0],
      [1,0,0,0,1],
      [1,1,1,1,0],
      [1,0,0,0,0],
      [1,0,0,0,0],
  ],
  "Q" : [
      [0,1,1,1,0],
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,0,0,1,1],
      [0,1,1,1,0],
  ],
  "R" : [
      [1,1,1,1,0],
      [1,0,0,0,1],
      [1,1,1,1,0],
      [1,0,0,1,0],
      [1,0,0,0,1],
  ],
  "S" : [
      [0,1,1,1,1],
      [1,0,0,0,0],
      [0,1,1,1,0],
      [0,0,0,0,1],
      [1,1,1,1,0],
  ],
  "T" : [
      [1,1,1,1,1],
      [0,0,1,0,0],
      [0,0,1,0,0],
      [0,0,1,0,0],
      [0,0,1,0,0],
  ],
  "U" : [
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,0,0,0,1],
      [0,1,1,1,0],
  ],
  "V" : [
      [1,0,0,0,1],
      [1,0,0,0,1],
      [0,1,0,1,0],
      [0,1,0,1,0],
      [0,0,1,0,0],
  ],
  "W" : [
      [1,0,0,0,1],
      [1,0,0,0,1],
      [1,0,1,0,1],
      [1,0,1,0,1],
      [0,1,0,1,0],
  ],
  "X" : [
      [1,0,0,0,1],
      [0,1,0,1,0],
      [0,0,1,0,0],
      [0,1,0,1,0],
      [1,0,0,0,1],
  ],
  "Y" : [
      [1,0,0,0,1],
      [0,1,0,1,0],
      [0,0,1,0,0],
      [0,0,1,0,0],
      [0,0,1,0,0],
  ],
  "Z" : [
      [1,1,1,1,1],
      [0,0,0,1,0],
      [0,0,1,0,0],
      [0,1,0,0,0],
      [1,1,1,1,1],
  ],
  "0" : [
      [0,1,1,1,0],
      [1,0,0,1,1],
      [1,0,1,0,1],
      [1,1,0,0,1],
      [0,1,1,1,0],
  ],
  "1" : [
      [0,0,0,1,1],
      [0,0,1,0,1],
      [0,1,0,0,1],
      [0,0,0,0,1],
      [0,0,0,0,1],
  ],
  "2" : [
      [0,1,1,1,0],
      [1,0,0,0,1],
      [0,0,1,1,0],
      [0,1,0,0,0],
      [1,1,1,1,1],
  ],
  "3" : [
      [1,1,1,1,0],
      [0,0,0,0,1],
      [0,0,1,1,0],
      [0,0,0,0,1],
      [1,1,1,1,0],
  ],
  "4" : [
      [0,0,1,1,0],
      [0,1,0,1,0],
      [1,1,1,1,1],
      [0,0,0,1,0],
      [0,0,0,1,0],
  ],
  "5" : [
      [1,1,1,1,1],
      [1,0,0,0,0],
      [1,1,1,1,0],
      [0,0,0,0,1],
      [1,1,1,1,0],
  ],
  "6" : [
      [0,1,1,1,1],
      [1,0,0,0,0],
      [1,1,1,1,0],
      [1,0,0,0,1],
      [0,1,1,1,0],
  ],
  "7" : [
      [1,1,1,1,1],
      [0,0,0,0,1],
      [0,0,0,1,0],
      [0,0,1,0,0],
      [0,1,0,0,0],
  ],
  "8" : [
      [0,1,1,1,0],
      [1,0,0,0,1],
      [0,1,1,1,0],
      [1,0,0,0,1],
      [0,1,1,1,0],
  ],
  "9" : [
      [0,1,1,1,0],
      [1,0,0,0,1],
      [0,1,1,1,1],
      [0,0,0,0,1],
      [1,1,1,1,0],
  ],
  "!" : [
      [0,0,1,0,0],
      [0,0,1,0,0],
      [0,0,1,0,0],
      [0,0,0,0,0],
      [0,0,1,0,0],
  ],
  " " : [
      [0,0,0,0,0],
      [0,0,0,0,0],
      [0,0,0,0,0],
      [0,0,0,0,0],
      [0,0,0,0,0],
  ],
  "-" : [
      [0,0,0,0,0],
      [0,0,0,0,0],
      [1,1,1,1,1],
      [0,0,0,0,0],
      [0,0,0,0,0],
  ],
  ">" : [
      [0,0,1,0,0],
      [0,1,1,1,0],
      [1,1,1,1,1],
      [0,1,1,1,0],
      [0,0,1,0,0],
  ],
  "?" : [
      [0,1,1,1,0],
      [1,0,0,0,1],
      [0,0,1,1,0],
      [0,0,0,0,0],
      [0,0,1,0,0],
  ],
  "¿" : [
      [0,0,1,0,0],
      [0,0,0,0,0],
      [0,1,1,0,0],
      [1,0,0,0,1],
      [0,1,1,1,0],
  ],
  "…" : [
      [0,0,0,0,0],
      [0,0,0,0,0],
      [0,0,0,0,0],
      [0,0,0,0,0],
      [1,0,1,0,1],
  ],
  "؞" : [
      [1,1,1,1,1],
      [0,0,0,0,1],
      [1,1,1,0,1],
      [1,0,0,0,1],
      [1,1,1,1,1],
  ],
  0 : [
      [0,0,0,0,0],
      [0,0,0,0,0],
      [0,0,1,0,0],
      [0,0,0,0,0],
      [0,0,0,0,0],
  ]
}

def get_color(char):
    if char.islower():
        return char
    else:
        return False

def get_char(char):
    if char in chars:
        return chars[char]
    else:
        return chars[0]

def colorize(val, color):
    for i, pixel in enumerate(val):
        if pixel != 0:
            val[i] = color
    return val

def get_text_buffer(text):
    width = len(text)*(PIXEL_SIZE+1)
    height = PIXEL_SIZE
    buffer = [[]] * height
    color = 'w'
    for char in list(text):
        char_color = get_color(char)
        if char_color != False:
            color = char_color
        else:
            char_pixels = get_char(char)
            for y, row in enumerate(char_pixels):
                buffer[y] = buffer[y] + colorize(row, color)
                buffer[y].append(0) # add a pixel on right of a new letter
    return buffer

def gcd(a, b): 
    if b == 0: 
        return a; 
    else: 
        return gcd(b, a%b) 

def scroll_left(buffer, d=1): 
    n = len(buffer[0])
    g = gcd(d,n)

    for row, arr in enumerate(buffer):
        for i in range(g):
            # move i-th values of blocks  
            temp = arr[i] 
            j = i 
            while 1: 
                k = j + d 
                if k >= n: 
                    k = k - n 
                if k == i: 
                    break
                arr[j] = arr[k] 
                j = k 
            arr[j] = temp 
